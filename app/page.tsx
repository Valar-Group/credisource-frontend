import React from 'react';

export default function LandingPage() {
  return (
    <div className="min-h-screen bg-gradient-to-br from-[#0A1628] via-[#152542] to-[#1a1535]">
      {/* Navigation */}
      <nav className="container mx-auto px-6 py-6 flex items-center justify-between">
        <div className="flex items-center gap-3">
          {/* Logo - You'll replace this with your actual logo */}
          <img 
            src="/credisource-logo.png" 
            alt="CrediSource" 
            className="h-10"
          />
        </div>
        
        <div className="flex items-center gap-8">
          <a href="#business" className="text-[#B8C5D6] hover:text-white transition-colors">
            For business
          </a>
          <a href="#about" className="text-[#B8C5D6] hover:text-white transition-colors">
            About
          </a>
          <a href="#pricing" className="text-[#B8C5D6] hover:text-white transition-colors">
            Pricing
          </a>
          <button className="text-white hover:text-[#E91E8C] transition-colors">
            Log in
          </button>
        </div>
      </nav>

      {/* Hero Section */}
      <div className="container mx-auto px-6 py-20">
        <div className="max-w-4xl mx-auto text-center">
          <h1 className="text-6xl font-bold text-white mb-6">
            Know what's real
          </h1>
          <p className="text-2xl text-[#B8C5D6] mb-12">
            Verify images, videos, and text for AI generation
          </p>

          {/* Main Upload Card */}
          <div className="bg-white/5 backdrop-blur-lg rounded-2xl p-8 border border-white/10">
            <UploadInterface />
          </div>

          {/* Feature Cards */}
          <div className="grid grid-cols-3 gap-6 mt-16">
            <FeatureCard
              icon={<MultiProviderIcon />}
              title="Multi-Provider"
              description="Combines results from multiple AI detection APIs for higher accuracy"
            />
            <FeatureCard
              icon={<FastResultsIcon />}
              title="Fast Results"
              description="Get verification results in 5-60 seconds depending on content type"
            />
            <FeatureCard
              icon={<TrustScoreIcon />}
              title="Trust Score"
              description="Clear 0-100 scale with detailed evidence breakdown"
            />
          </div>
        </div>
      </div>

      {/* Stats Section */}
      <div className="bg-white/5 backdrop-blur-lg py-20 mt-20">
        <div className="container mx-auto px-6">
          <div className="max-w-6xl mx-auto">
            <h2 className="text-4xl font-bold text-white text-center mb-4">
              The world's first consumer platform that verifies everything -
            </h2>
            <p className="text-3xl text-center mb-16">
              <span className="text-[#E91E8C]">images, videos, text, and news</span>
              <span className="text-white"> - in seconds.</span>
            </p>

            <div className="grid grid-cols-3 gap-8">
              <StatCard
                number="8M"
                label="deepfakes by the end of 2025"
              />
              <StatCard
                number="$40b"
                label="AI fraud by 2027"
              />
              <StatCard
                number="90%"
                label="of online content AI-generated by 2026"
              />
            </div>
          </div>
        </div>
      </div>

      {/* Partners Section */}
      <div className="container mx-auto px-6 py-20">
        <h3 className="text-2xl font-semibold text-[#E91E8C] text-center mb-12">
          Used by brands who value trust
        </h3>
        <div className="flex items-center justify-center gap-16 opacity-50 grayscale hover:grayscale-0 transition-all">
          <PartnerLogo name="Department for Education" />
          <PartnerLogo name="Vodafone" />
          <PartnerLogo name="Accenture" />
          <PartnerLogo name="Snapchat" />
          <PartnerLogo name="The Standard" />
        </div>
      </div>

      {/* Trust Badge Section */}
      <div className="bg-gradient-to-r from-[#E91E8C]/10 to-[#7B2D8E]/10 py-20">
        <div className="container mx-auto px-6">
          <div className="max-w-4xl mx-auto text-center">
            <h2 className="text-4xl font-bold text-white mb-4">
              Display the badge,
            </h2>
            <p className="text-4xl font-bold text-[#E91E8C] mb-12">
              harness trust.
            </p>
            
            <div className="inline-flex items-center gap-4 bg-white rounded-lg p-6">
              <div className="text-6xl font-bold text-[#E91E8C]">98%</div>
              <div className="flex items-center gap-3">
                <div className="w-12 h-12 bg-[#E91E8C] rounded"></div>
                <div className="text-left">
                  <div className="font-bold text-[#0A1628]">credisource</div>
                  <div className="text-sm text-gray-600">Verified content</div>
                </div>
              </div>
            </div>

            <button className="mt-8 bg-[#E91E8C] hover:bg-[#d11a7d] text-white px-8 py-4 rounded-lg font-semibold transition-colors">
              Learn more
            </button>
          </div>
        </div>
      </div>
    </div>
  );
}

// Upload Interface Component
function UploadInterface() {
  const [selectedType, setSelectedType] = React.useState<'image' | 'video' | 'text' | 'news' | null>(null);
  const [isDragging, setIsDragging] = React.useState(false);

  return (
    <div className="space-y-6">
      {/* Content Type Selection */}
      <div className="grid grid-cols-4 gap-4">
        <TypeButton
          icon={<ImageIcon />}
          label="Image"
          selected={selectedType === 'image'}
          onClick={() => setSelectedType('image')}
        />
        <TypeButton
          icon={<VideoIcon />}
          label="Video"
          selected={selectedType === 'video'}
          onClick={() => setSelectedType('video')}
        />
        <TypeButton
          icon={<TextIcon />}
          label="Text"
          selected={selectedType === 'text'}
          onClick={() => setSelectedType('text')}
        />
        <TypeButton
          icon={<NewsIcon />}
          label="News"
          selected={selectedType === 'news'}
          onClick={() => setSelectedType('news')}
        />
      </div>

      {/* Upload Area */}
      {selectedType && (
        <div
          className={`border-2 border-dashed rounded-xl p-12 transition-all ${
            isDragging
              ? 'border-[#E91E8C] bg-[#E91E8C]/10'
              : 'border-white/20 hover:border-white/40'
          }`}
          onDragOver={(e) => {
            e.preventDefault();
            setIsDragging(true);
          }}
          onDragLeave={() => setIsDragging(false)}
          onDrop={(e) => {
            e.preventDefault();
            setIsDragging(false);
            // Handle file drop
          }}
        >
          <div className="text-center space-y-4">
            <div className="inline-block p-4 bg-[#E91E8C]/10 rounded-full">
              <svg className="w-12 h-12 text-[#E91E8C]" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
              </svg>
            </div>
            <div className="text-white text-lg">
              Paste text, enter a URL or drop an {selectedType} to verify
            </div>
            
            {/* URL Input */}
            <div className="flex gap-3 max-w-2xl mx-auto">
              <input
                type="text"
                placeholder={`Enter ${selectedType} URL...`}
                className="flex-1 bg-white/10 border border-white/20 rounded-lg px-6 py-4 text-white placeholder-white/50 focus:outline-none focus:border-[#E91E8C] transition-colors"
              />
              <button className="bg-[#E91E8C] hover:bg-[#d11a7d] text-white px-8 py-4 rounded-lg font-semibold transition-colors whitespace-nowrap">
                Verify
              </button>
            </div>

            {/* File Browse Button */}
            <div className="pt-4">
              <label className="inline-block cursor-pointer text-[#E91E8C] hover:text-[#d11a7d] transition-colors">
                <input type="file" className="hidden" />
                or browse files
              </label>
            </div>
          </div>
        </div>
      )}

      {!selectedType && (
        <div className="text-center py-12 text-[#B8C5D6]">
          Select a content type above to get started
        </div>
      )}
    </div>
  );
}

// Type Selection Button
function TypeButton({ 
  icon, 
  label, 
  selected, 
  onClick 
}: { 
  icon: React.ReactNode; 
  label: string; 
  selected: boolean; 
  onClick: () => void;
}) {
  return (
    <button
      onClick={onClick}
      className={`p-6 rounded-xl transition-all ${
        selected
          ? 'bg-[#E91E8C] text-white'
          : 'bg-white/5 hover:bg-white/10 text-[#B8C5D6]'
      }`}
    >
      <div className="text-4xl mb-3">{icon}</div>
      <div className="font-semibold">{label}</div>
    </button>
  );
}

// Filled Icons (as requested)
function ImageIcon() {
  return (
    <svg className="w-10 h-10 mx-auto" fill="currentColor" viewBox="0 0 24 24">
      <path d="M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3V5h18v14zm-5.5-7L13 15l-2-2-3 4h12l-4.5-6z"/>
    </svg>
  );
}

function VideoIcon() {
  return (
    <svg className="w-10 h-10 mx-auto" fill="currentColor" viewBox="0 0 24 24">
      <path d="M17 10.5V7c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-3.5l4 4v-11l-4 4z"/>
    </svg>
  );
}

function TextIcon() {
  return (
    <svg className="w-10 h-10 mx-auto" fill="currentColor" viewBox="0 0 24 24">
      <path d="M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z"/>
    </svg>
  );
}

function NewsIcon() {
  return (
    <svg className="w-10 h-10 mx-auto" fill="currentColor" viewBox="0 0 24 24">
      <path d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-5 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z"/>
    </svg>
  );
}

// Feature Icons (Flat, Professional Style)
function MultiProviderIcon() {
  return (
    <svg className="w-12 h-12 text-[#E91E8C]" fill="currentColor" viewBox="0 0 24 24">
      <path d="M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z"/>
      <circle cx="19" cy="9" r="2" opacity="0.7"/>
      <circle cx="19" cy="15" r="2" opacity="0.5"/>
    </svg>
  );
}

function FastResultsIcon() {
  return (
    <svg className="w-12 h-12 text-[#E91E8C]" fill="currentColor" viewBox="0 0 24 24">
      <path d="M7 2v11h3v9l7-12h-4l4-8z"/>
    </svg>
  );
}

function TrustScoreIcon() {
  return (
    <svg className="w-12 h-12 text-[#E91E8C]" fill="currentColor" viewBox="0 0 24 24">
      <path d="M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm-2 16l-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z"/>
    </svg>
  );
}

function NewsIcon() {
  return (
    <svg className="w-10 h-10 mx-auto" fill="currentColor" viewBox="0 0 24 24">
      <path d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-5 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z"/>
    </svg>
  );
}

// Feature Card
function FeatureCard({ 
  icon, 
  title, 
  description 
}: { 
  icon: React.ReactNode; 
  title: string; 
  description: string;
}) {
  return (
    <div className="bg-white/5 backdrop-blur-sm rounded-xl p-6 border border-white/10">
      <div className="mb-4">{icon}</div>
      <h3 className="text-white font-semibold text-lg mb-2">{title}</h3>
      <p className="text-[#B8C5D6] text-sm">{description}</p>
    </div>
  );
}

// Stat Card
function StatCard({ 
  number, 
  label 
}: { 
  number: string; 
  label: string;
}) {
  return (
    <div className="bg-white rounded-xl p-8 text-center">
      <div className="text-6xl font-bold text-[#E91E8C] mb-4">{number}</div>
      <div className="text-[#0A1628] text-lg font-medium">{label}</div>
    </div>
  );
}

// Partner Logo Placeholder
function PartnerLogo({ name }: { name: string }) {
  return (
    <div className="text-[#B8C5D6] font-semibold text-sm">
      {name}
    </div>
  );
}
